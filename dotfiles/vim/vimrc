silent! call pathogen#runtime_append_all_bundles()
silent! call pathogen#helptags()
set nocompatible                  " Must come first because it changes other options.
set shell=/bin/zsh
" set shellcmdflag=-ic
syntax enable                     " Turn on syntax highlighting.
filetype plugin indent on         " Turn on file type detection.  
runtime macros/matchit.vim        " Load the matchit plugin.

set showcmd                       " Display incomplete commands.
set showmode                      " Display the mode you're in.

set backspace=indent,eol,start    " Intuitive backspacing.

set hidden                        " Handle multiple buffers better.

set wildmenu                      " Enhanced command line completion.
set wildmode=list:longest         " Complete files like a shell.

set ignorecase                    " Case-insensitive searching.
set smartcase                     " But case-sensitive if expression contains a capital letter.

set cmdheight=2                   " Number of lines used for the command-line
set number                        " Show line numbers.
set ruler                         " Show cursor position.

set incsearch                     " Highlight matches as you type.
set hlsearch                      " Highlight matches.

set wrap                          " Turn on line wrapping.
set scrolloff=3                   " Show 3 lines of context around the cursor.

set title                         " Set the terminal's title

set visualbell                    " No beeping.

set nobackup                      " Don't make a backup before overwriting a file.
set nowritebackup                 " And again.
set directory=$HOME/.vimtmp//, " Keep swap files in one location

set clipboard=unnamed            " Set up clipboard 
map <F2> ;.w !pbcopy<CR><CR>     " Copies the current line to the clipboard.
map <F3> ;r !pbpaste<CR>         " Pastes the current content from the clipboard.

" set tabstop=2                    " Global tab width.
" set shiftwidth=2                 " And again, related.
" set expandtab                    " Use spaces instead of tabs

set laststatus=2                 " Show the status line all the time
" Useful status information at bottom of screen
set statusline=[%n]\ %<%.99f\ %h%w%y\ %{fugitive#statusline()}%m%r\ \ \ \ \ %l\ [%c-%v]\ %P

colorscheme raphael

" Mapping to set leader key  
let mapleader=","
let maplocalleader=","

" Mapping terminal command key for quick commands
nmap \ ;!

" Tab mappings.
map <leader>tn ;tabnew<cr>
map <leader>te ;tabedit
map <leader>tc ;tabclose<cr>
map <leader>to ;tabonly<cr>
map <leader>] ;tabnext<cr>
map <leader>[ ;tabprevious<cr>
map <leader>tf ;tabfirst<cr>
map <leader>tl ;tablast<cr>
map <leader>tm ;tabmove

" Finding all todos in project
map <leader>t ;Ack TODO -G 'public\\|vendor\\|tmp' --invert-file-match<cr>
" Maps Enter to open QuickFixes currently selected file.
:autocmd BufReadPost quickfix nnoremap <buffer> <CR> <CR>

" Window mappings.
map <leader><Tab> <C-w>w 
map <leader>o <C-w>o
map <leader>v <C-w>v<C-w>w
map <leader>h <C-w>s<C-w>w
map <leader>p <C-w>p
map <leader>j <C-w>j
map <leader>k <C-w>k
map <leader>w <C-w>c
map <Leader>y ;%y+<cr>
map <up> <C-w>k
map <down> <C-w>j
map <left> <C-w>h
map <right> <C-w>l

" nmap <leader>r ;call ReloadAllSnippets()<cr>

" Mappings to commonly edited files
nmap <leader>1 ;e $HOME/bin/dotfiles/vim/vimrc<cr>
nmap <leader>2 ;e $HOME/bin/dotfiles/zsh/aliases<cr>
nmap <leader>3 ;e $HOME/bin/dotfiles/vim/colors/raphael.vim<cr>
nmap <leader>4 ;e $HOME/bin/dotfiles/vim/bundle/snipmate/snippets/_.snippets<cr>
nmap <leader>5 ;e $HOME/bin/dotfiles/vim/bundle/snipmate/snippets/html.snippets<cr>
nmap <leader>6 ;e $HOME/bin/dotfiles/vim/bundle/snipmate/snippets/css.snippets<cr>
nmap <leader>7 ;e $HOME/bin/dotfiles/vim/bundle/snipmate/snippets/javascript.snippets<cr>
nmap <leader>8 ;e $HOME/bin/dotfiles/vim/bundle/snipmate/snippets/ruby.snippets<cr>


if has("autocmd")
  autocmd bufwritepost vimrc source $HOME/bin/dotfiles/vim/vimrc " Automatically reloads vimrc when the file is saved.
endif

" Automatically save file when exiting insert mode
" imap <esc> <esc>;w<cr>	                  

" CommandT  plugin mappings
nmap <silent> <leader>f ;CommandT<cr>
let g:CommandTMatchWindowAtTop=1
let g:CommandTCancelMap='<Esc>'
let g:CommandTSelectPrevMap=['<Esc>OA', '<Up>']
let g:CommandTSelectNextMap=['<Esc>OB', '<Down>']
let g:CommandTMaxHeight=25

" Snipmate plugin mappings
let g:snippets_dir="$HOME/bin/dotfiles/vim/bundle/snipmate/snippets"

" set notimeout          " don't timeout on mappings
" set ttimeout           " do timeout on terminal key codes
" set timeoutlen=100     " timeout after 100 msec

" NERDTree plugin mapping
map <leader>d ;NERDTreeToggle<cr>
let NERDTreeShowHidden=1

" Buffer Explorer plugin mapping
map <leader>b ;BufExplorer<cr>

" hexHighlight mapping
map <leader>c ;call HexHighlight()<cr>

" swap colon and semicolon for easier commands
nnoremap ; :
nnoremap : ;

vnoremap ; :
vnoremap : ;

" Mappings to make text indentation in command mode easier
nnoremap > >>
nnoremap < <<

" Mappings to make text indentation in visual mode easier
vmap > >gv
vmap < <gv

" Insert mode mappings
" set macmeta
imap ≥  <space>=> 
imap ≤ <%= %>
imap <C-Space> %
imap <A-Space> %
" Ctrl-j/k deletes blank line below/above, and Alt-j/k inserts.
nnoremap <silent><C-j> m`:silent +g/\m^\s*$/d<CR>``:noh<CR>
nnoremap <silent><C-k> m`:silent -g/\m^\s*$/d<CR>``:noh<CR>
nnoremap  :set paste<CR>m`o<Esc>``:set nopaste<CR>
nnoremap <S-> :set paste<CR>m`O<Esc>``:set nopaste<CR>
nnoremap <silent>∆ :set paste<CR>m`o<Esc>``:set nopaste<CR>
nnoremap <silent>˚ :set paste<CR>m`O<Esc>``:set nopaste<CR>

" Automatic fold settings for specific files. Uncomment to use.
set foldmethod=manual
" autocmd FileType ruby setlocal foldmethod=syntax
" autocmd FileType css  setlocal foldmethod=indent shiftwidth=2 tabstop=2

" For the MakeGreen plugin and Ruby RSpec. Uncomment to use.
" autocmd BufNewFile,BufRead *_spec.rb compiler rspec

" Sets up some global settings for the ragtag plugin 
let g:ragtag_global_maps = 1 

" Sets the line height of the preview window
set previewheight=25

" Highlights the current line in all windows
set cursorline 
" Stop cursor blink in normal mode
set gcr=n:blinkon0

" Automatically saves files when the buffer is changed
set autowrite

" Changes the cursor shape in terminal vim (using iTerm2 on OS X)
let &t_SI = "\<Esc>]50;CursorShape=1\x7"
let &t_EI = "\<Esc>]50;CursorShape=0\x7"

" Auto indent entire file with Alt =
map   <silent> ≠ mmgg=G'm
imap  <silent> ≠ <Esc> mmgg=G'm

" Show syntax highlighting groups for word under cursor
nmap <C-S-P> ;call <SID>SynStack()<CR>
function! <SID>SynStack()
  if !exists("*synstack")
    return
  endif
  echo map(synstack(line('.'), col('.')), 'synIDattr(v:val,"name")')
endfunc

" map jj o<esc>`a
" map kk O<esc>`a

" Mapping to remove all blank lines (whitespace)
nmap <leader>l ;g/^$/d<CR>

:command Thtml :%!tidy -q -i -html
