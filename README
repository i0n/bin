My home bin folder containing a custom configuration for bash and zsh shells on Mac OS X

To use local 960-gridder.js create a bookmark and add this as the address:

javascript:(function(){document.body.appendChild(document.createElement('script')).src='http://localhost/bin/960-gridder.js';})();

Replace path with the actual path to the file!




This is a collection of bespoke Rails app templates. 

The idea is that they will automate everything that it is possible to automate in order to create a local development environment and a remote production environment, including webserver config and database creation. All with one command!

So for instance I have this alias in my local bash config:
alias irails='rails -d mysql -m ~/sites/rails-templates/base.rb'

So now I can type: irails name_of_my_new_app
and everything I need will be created for me! Pretty cool.

The script will set two variables for deployment based on user input: 
app_name which is just the name of the rails app that you specified in the rails command. 
remote_server which the script will ask you to enter. This should be the IP address of your remote server or a ssh alias to that IP.
There is one more variable at the top of base.rb which sets the rails-templates path so that all the files get found. This should be changed to match the path on the system being used before you run the script.

Although this script is super awesome it does rely on some stuff already being set up. Here's a list:

I generally deploy to Linux based Nginx webservers, and I also use Nginx locally on OSX so these scripts assume that.
Locally I have Nginx at /usr/local/nginx.
Remotely I have it at /opt/nginx. So if this doesn't match your setup you will need to change these paths as well as the one defined in the variable rails_template_path

Other dependencies:

Ruby is already installed locally and remotely (I deploy with REE 1.8.7 but these scripts should work with any half recent version)
Database is MySQL both locally and remotely.
Rails
Git
Capistrano

Other stuff:
I'm using Exception Notification plugin, RSpec and Haml as standard. Dependencies should be handled automatically. It should be fairly easy to change this if you want other stuff.

If you have all of this installed and want to nab these scripts they should work with minimal tweaking. I think there are a couple of things in Capistrano's deploy.rb that you will need to change, but once tweaked you can then forget about it!

Finally these scripts will update your nginx.conf locally with name_of_app.local as the server name. Remotely it will just be name_of_app so if you already have your nameservers sorted and the domain name matches the project name you specified for your rails app then you shouldn't have to change anything!

Hope someone else finds this useful, if I've missed anything let me know!
